input {
  beats {
    port => 5961
  }
}

filter {
    if "nginx" in [tags] {
        if [source] =~ /access.log$/ {
            grok {
                match => { "message" => ["%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" \"%{DATA:[nginx][access][agent]}\" %{NUMBER:[nginx][access][process_times][request_time]} %{NUMBER:[nginx][access][process_times][upstream_connect_time]} %{NUMBER:[nginx][access][process_times][upstream_header_time]} %{NUMBER:[nginx][access][process_times][upstream_response_time]}"] }
            }
            mutate {
                add_field => { "read_timestamp" => "%{@timestamp}" }
                convert => { "nginx.access.process_times.request_time" => "float" }
                convert => { "nginx.access.process_times.upstream_connect_time" => "float" }
                convert => { "nginx.access.process_times.upstream_response_time" => "float" }
                convert => { "nginx.access.process_times.upstream_header_time" => "float" }
                convert => { "nginx.access.response_code" => "integer" }
                convert => { "nginx.access.body_sent.bytes" => "integer" }
            }
            date {
                match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
                remove_field => "[nginx][access][time]"
            }
            useragent {
                source => "[nginx][access][agent]"
                target => "[nginx][access][user_agent]"
                remove_field => "[nginx][access][agent]"
            }
        }
        else if [source] =~ /error.log$/ {
            grok {
                match => { "message" => ["%{DATA:[nginx][error][time]} \[%{DATA:[nginx][error][level]}\] %{NUMBER:[nginx][error][pid]}#%{NUMBER:[nginx][error][tid]}: (\*%{NUMBER:[nginx][error][connection_id]} )?%{GREEDYDATA:[nginx][error][message]}"] }
                remove_field => "message"
            }
            mutate {
                add_field => { "read_timestamp" => "%{@timestamp}" }
            }
            date {
                match => [ "[nginx][error][time]", "YYYY/MM/dd H:m:s" ]
                remove_field => "[nginx][error][time]"
            }
        }
    }
}

output {
  elasticsearch {
    hosts => ["${PIPELINE_ES_HOST}"]
    index => "tcp-filebeat-pipeline-%{+YYYY.MM.dd}"
  }
  stdout {}
}
